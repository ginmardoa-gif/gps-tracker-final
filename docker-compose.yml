#version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: gps_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: gps_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      FLASK_ENV: ${FLASK_ENV}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "${BACKEND_PORT}:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app
    restart: unless-stopped

  backend-proxy:
    image: nginx:alpine
    container_name: gps_backend_proxy
    ports:
      - "5443:5443"
    volumes:
      - ./backend-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: gps_frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped

  mobile:
    build: ./mobile
    container_name: gps_mobile
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped

volumes:
  postgres_data:
